17/10/23: Finished adding pieces for both teams.
26/10/23: Stopped coding because I realised my planned class design has too many dependencies and is not done well. I have now thought of a new class design plan which I am going to implement.
26/10/23: Finished refactoring old code so it follows new class design plan.
14/11/23: Players can move in a turn based way. Need to start work on MoveValidator before refactoring gameThread.
17/11/23: Added all basic movement logic to move validator class. In doing so, I noticed that the work I did on 14/11/23 may not have been the most relevant at the time because a lot of it will be replaced.
19/11/23: Added collision detetction for each move.
20/11/23: Added Capture logic to GameThread. Need to go back to work on moveValidator to implement more complex captures like pawn captures.
21/11/23: Added Pawn capture logic. Next thing to add will be check/checkmate logic. This will require refactoring the moveValidator class.
11/03/24: Added Pawn promotion logic. Currently stuck on implementing a choice factor into it so th system currently only promotes to a Queen.
19/03/24: Added Check and checkmate logic. Struggling to find a way to allow gameThread to recognise a checkmate.
04/04/24: Added new GUI to each game for showing game status. Also implemented pawn promotion properly.
08/04/24: Finally completed adding checkmate logic. It was very difficult to implement at first because every method i tried did not work but I found a way to do it.
08/04/24: Added stalemate logic and now the code is fully functional. The game can end in either a win or a draw.